-- MySQL Script generated by MySQL Workbench
-- Thu May 16 11:14:54 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP DATABASE IF EXISTS GameTimeDB;
CREATE DATABASE IF NOT EXISTS GameTimeDB;
Use GameTimeDB;
-- -----------------------------------------------------
-- Table `User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `User` ;

CREATE TABLE IF NOT EXISTS `User` (
  `UserID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Email` VARCHAR(90) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `Role` VARCHAR(45) NOT NULL,
  `BirthDate` DATE NULL,
  `IsMobile` TINYINT(1) NOT NULL DEFAULT 0,
  `PhoneNumber` INT(11) UNSIGNED NULL,
  PRIMARY KEY (`UserID`, `Email`),
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC) INVISIBLE,
  UNIQUE INDEX `UserID_UNIQUE` (`UserID` ASC) INVISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UserProfile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `UserProfile` ;

CREATE TABLE IF NOT EXISTS `UserProfile` (
  `ProfileID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Avatar` VARCHAR(45) NULL,
  `FreeTime` TINYINT(2) NULL,
  `MultiplayerPreference` ENUM('Single', 'Coop', 'Large Scale') NULL,
  `SocialPlayPreference` ENUM('Light', 'Heavy', 'Optional') NULL,
  `UserProfile_UserID` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`ProfileID`),
  INDEX `UserID_idx` (`UserProfile_UserID` ASC) INVISIBLE,
  UNIQUE INDEX `User_UserID_UNIQUE` (`UserProfile_UserID` ASC) VISIBLE,
  UNIQUE INDEX `ProfileID_UNIQUE` (`ProfileID` ASC) VISIBLE,
  CONSTRAINT `UserProfile_UserID`
    FOREIGN KEY (`UserProfile_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Game`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Game` ;

CREATE TABLE IF NOT EXISTS `Game` (
  `GameID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(45) NULL,
  `Complexity` TINYINT(2) NULL,
  `FocusLevel` TINYINT(2) NULL,
  `PlayMode` TINYINT(1) NULL DEFAULT 0,
  `Microtransactions` TINYINT(1) NULL DEFAULT 0,
  `AgeRating` VARCHAR(3) NULL,
  `Price` DECIMAL(8,2) NULL,
  `ReleaseDate` DATE NULL,
  `IsDemo` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`GameID`),
  UNIQUE INDEX `GameID_UNIQUE` (`GameID` ASC) INVISIBLE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `Genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Genre` ;

CREATE TABLE IF NOT EXISTS `Genre` (
  `GenreID` INT(9) UNSIGNED NOT NULL DEFAULT 0,
  `GenreName` VARCHAR(45) NULL,
  `SubGenreName` VARCHAR(45) NULL,
  `SubGenreID` INT(9) UNSIGNED NULL AUTO_INCREMENT,
  PRIMARY KEY (`GenreID`),
  UNIQUE INDEX `GenreID_UNIQUE` (`GenreID` ASC) INVISIBLE,
  UNIQUE INDEX `SubGenreID_UNIQUE` (`SubGenreID` ASC) INVISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameGenre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameGenre` ;

CREATE TABLE IF NOT EXISTS `GameGenre` (
  `Game_GameID` INT(9) UNSIGNED NOT NULL,
  `Genre_GenreID` INT(9) UNSIGNED NOT NULL,
  `GameGenreID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  INDEX `fk_Game_has_Genre_Genre1_idx` (`Genre_GenreID` ASC) VISIBLE,
  INDEX `fk_Game_has_Genre_Game1_idx` (`Game_GameID` ASC) VISIBLE,
  PRIMARY KEY (`GameGenreID`),
  UNIQUE INDEX `GameGenreID_UNIQUE` (`GameGenreID` ASC) VISIBLE,
  UNIQUE INDEX `Game_GameID_UNIQUE` (`Game_GameID` ASC) VISIBLE,
  UNIQUE INDEX `Genre_GenreID_UNIQUE` (`Genre_GenreID` ASC) VISIBLE,
  CONSTRAINT `GameGenre_GameID`
    FOREIGN KEY (`Game_GameID`)
    REFERENCES `Game` (`GameID`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `GameGenre_GenreID`
    FOREIGN KEY (`Genre_GenreID`)
    REFERENCES `Genre` (`GenreID`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Platform`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Platform` ;

CREATE TABLE IF NOT EXISTS `Platform` (
  `PlatformID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `PlatformName` VARCHAR(45) NULL,
  `PlatformSpecificFeatures` VARCHAR(500) NULL,
  PRIMARY KEY (`PlatformID`),
  UNIQUE INDEX `PlatformID_UNIQUE` (`PlatformID` ASC) INVISIBLE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `GamePlatform`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GamePlatform` ;

CREATE TABLE IF NOT EXISTS `GamePlatform` (
  `Game_has_Platform_GameID` INT(9) UNSIGNED NOT NULL,
  `Game_has_Platform_PlatformID` INT(9) UNSIGNED NOT NULL,
  `GamePlatformID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  UNIQUE INDEX `Game_GameID_UNIQUE` (`Game_has_Platform_GameID` ASC) VISIBLE,
  UNIQUE INDEX `Platform_PlatformID_UNIQUE` (`Game_has_Platform_PlatformID` ASC) VISIBLE,
  PRIMARY KEY (`GamePlatformID`),
  CONSTRAINT `Game_has_Platform_PlatformID`
    FOREIGN KEY (`Game_has_Platform_PlatformID`)
    REFERENCES `Platform` (`PlatformID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `Review`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Review` ;

CREATE TABLE IF NOT EXISTS `Review` (
  `ReviewID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Rating` TINYINT(3) NULL,
  `ReviewText` VARCHAR(1000) NULL,
  `TimeSpent` TINYINT(5) NULL,
  `Game_GameID` INT(9) UNSIGNED NOT NULL,
  `User_UserID` INT(9) UNSIGNED NOT NULL,
  `ReviewDate` DATETIME NULL,
  `FeedbackRequest` TINYINT(1) NULL DEFAULT 0,
  PRIMARY KEY (`ReviewID`),
  UNIQUE INDEX `ReviewID_UNIQUE` (`ReviewID` ASC) INVISIBLE,
  UNIQUE INDEX `Game_GameID_UNIQUE` (`Game_GameID` ASC) INVISIBLE,
  UNIQUE INDEX `User_UserID_UNIQUE` (`User_UserID` ASC) INVISIBLE,
  CONSTRAINT `Review_GameID`
    FOREIGN KEY (`Game_GameID`)
    REFERENCES `Game` (`GameID`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `Review_UserID`
    FOREIGN KEY (`User_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `Event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Event` ;

CREATE TABLE IF NOT EXISTS `Event` (
  `EventID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `EventDate` DATETIME NULL,
  `Description` VARCHAR(1000) NULL,
  `Event_GameID` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`EventID`),
  INDEX `GameID_idx` (`Event_GameID` ASC) VISIBLE,
  UNIQUE INDEX `EventID_UNIQUE` (`EventID` ASC) INVISIBLE,
  UNIQUE INDEX `Game_GameID_UNIQUE` (`Event_GameID` ASC) VISIBLE,
  CONSTRAINT `Event_GameID`
    FOREIGN KEY (`Event_GameID`)
    REFERENCES `Game` (`GameID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `Achivement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Achivement` ;

CREATE TABLE IF NOT EXISTS `Achivement` (
  `AchivementID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `AchivementDetails` VARCHAR(100) NULL,
  `Achivement_GameID` INT(9) UNSIGNED NOT NULL,
  `Achivement_UserID` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`AchivementID`),
  INDEX `GameID_idx` (`Achivement_GameID` ASC) INVISIBLE,
  INDEX `UserID_idx` (`Achivement_UserID` ASC) INVISIBLE,
  UNIQUE INDEX `AchivementID_UNIQUE` (`AchivementID` ASC) INVISIBLE,
  UNIQUE INDEX `Game_GameID_UNIQUE` (`Achivement_GameID` ASC) INVISIBLE,
  UNIQUE INDEX `User_UserID_UNIQUE` (`Achivement_UserID` ASC) INVISIBLE,
  CONSTRAINT `Achivement _GameID`
    FOREIGN KEY (`Achivement_GameID`)
    REFERENCES `Game` (`GameID`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `Achivement _UserID`
    FOREIGN KEY (`Achivement_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `UserGame`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `UserGame` ;

CREATE TABLE IF NOT EXISTS `UserGame` (
  `OwnershipStatus` TINYINT(1) NULL DEFAULT 0,
  `WishlistStatus` TINYINT(1) NULL DEFAULT 0,
  `UserGame_UserID` INT(9) UNSIGNED NOT NULL,
  `UserGame_GameID` INT(9) UNSIGNED NOT NULL,
  `EventFlag` TINYINT(1) NOT NULL DEFAULT 0,
  `Demo` TINYINT(1) NOT NULL DEFAULT 0,
  INDEX `GameID_idx` (`UserGame_GameID` ASC) VISIBLE,
  INDEX `UserID_idx` (`UserGame_UserID` ASC) VISIBLE,
  UNIQUE INDEX `User_UserID_UNIQUE` (`UserGame_UserID` ASC) VISIBLE,
  UNIQUE INDEX `Game_GameID_UNIQUE` (`UserGame_GameID` ASC) VISIBLE,
  CONSTRAINT `UserGame_UserID`
    FOREIGN KEY (`UserGame_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `UserGame_GameID`
    FOREIGN KEY (`UserGame_GameID`)
    REFERENCES `Game` (`GameID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `UserGenrePreference`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `UserGenrePreference` ;

CREATE TABLE IF NOT EXISTS `UserGenrePreference` (
  `UserGenPref_UserID` INT(9) UNSIGNED NOT NULL,
  `UserGenPref_GenreID` INT(9) UNSIGNED NOT NULL,
  `UserGenPref_SubGenreID` INT(9) UNSIGNED NULL,
  INDEX `GenreID_idx` (`UserGenPref_GenreID` ASC) VISIBLE,
  INDEX `UserID_idx` (`UserGenPref_UserID` ASC) VISIBLE,
  INDEX `SubGenreID_idx` (`UserGenPref_SubGenreID` ASC) VISIBLE,
  UNIQUE INDEX `User_UserID_UNIQUE` (`UserGenPref_UserID` ASC) VISIBLE,
  UNIQUE INDEX `Genre_GenreID_UNIQUE` (`UserGenPref_GenreID` ASC) VISIBLE,
  UNIQUE INDEX `Genre_SubGenreID_UNIQUE` (`UserGenPref_SubGenreID` ASC) VISIBLE,
  CONSTRAINT `UserGenrePreference_UserID`
    FOREIGN KEY (`UserGenPref_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `UserGenrePreference_GenreID`
    FOREIGN KEY (`UserGenPref_GenreID`)
    REFERENCES `Genre` (`GenreID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `UserGenrePreference_SubGenreID`
    FOREIGN KEY (`UserGenPref_SubGenreID`)
    REFERENCES `Genre` (`SubGenreID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `GameUpdate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameUpdate` ;

CREATE TABLE IF NOT EXISTS `GameUpdate` (
  `UpdateID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Game_GameID` INT(9) UNSIGNED NOT NULL,
  `GameUpdatecol` VARCHAR(45) NULL,
  `UpdateDescription` VARCHAR(1000) NULL,
  `ReleaseDate` DATETIME NULL,
  PRIMARY KEY (`UpdateID`),
  INDEX `GameID_idx` (`Game_GameID` ASC) VISIBLE,
  UNIQUE INDEX `UpdateID_UNIQUE` (`UpdateID` ASC) INVISIBLE,
  UNIQUE INDEX `Game_GameID_UNIQUE` (`Game_GameID` ASC) INVISIBLE,
  CONSTRAINT `GameUpdate_GameID`
    FOREIGN KEY (`Game_GameID`)
    REFERENCES `Game` (`GameID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `ContentModeration`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ContentModeration` ;

CREATE TABLE IF NOT EXISTS `ContentModeration` (
  `ContentID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `ContentModeration_UserID` INT(9) UNSIGNED NOT NULL,
  `Approval` VARCHAR(45) NULL,
  `ApprovalDate` DATETIME NULL,
  `ContentType` VARCHAR(45) NULL,
  PRIMARY KEY (`ContentID`),
  INDEX `UserID_idx` (`ContentModeration_UserID` ASC) VISIBLE,
  UNIQUE INDEX `ContentID_UNIQUE` (`ContentID` ASC) INVISIBLE,
  UNIQUE INDEX `User_UserID_UNIQUE` (`ContentModeration_UserID` ASC) INVISIBLE,
  CONSTRAINT `ContentModeration _UserID`
    FOREIGN KEY (`ContentModeration_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `UserReward`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `UserReward` ;

CREATE TABLE IF NOT EXISTS `UserReward` (
  `RewardID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `UserReward_UserID` INT(9) UNSIGNED NOT NULL,
  `RewardType` VARCHAR(100) NULL,
  `EarnedDate` DATETIME NULL,
  PRIMARY KEY (`RewardID`),
  INDEX `UserID_idx` (`UserReward_UserID` ASC) VISIBLE,
  UNIQUE INDEX `RewardID_UNIQUE` (`RewardID` ASC) INVISIBLE,
  UNIQUE INDEX `User_UserID_UNIQUE` (`UserReward_UserID` ASC) INVISIBLE,
  CONSTRAINT `UserReward_UserID`
    FOREIGN KEY (`UserReward_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SocialNetwork`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SocialNetwork` ;

CREATE TABLE IF NOT EXISTS `SocialNetwork` (
  `SocialNetworkID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `SocialNetwork_UserID` INT(9) UNSIGNED NOT NULL,
  `SocialNetworkType` VARCHAR(45) NULL,
  `AccountDetails` VARCHAR(100) NULL,
  PRIMARY KEY (`SocialNetworkID`),
  INDEX `UserID_idx` (`SocialNetwork_UserID` ASC) VISIBLE,
  UNIQUE INDEX `SocialNetworkID_UNIQUE` (`SocialNetworkID` ASC) INVISIBLE,
  UNIQUE INDEX `User_UserID_UNIQUE` (`SocialNetwork_UserID` ASC) INVISIBLE,
  CONSTRAINT `SocialNetwork_UserID`
    FOREIGN KEY (`SocialNetwork_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `TechSupportTicket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TechSupportTicket` ;

CREATE TABLE IF NOT EXISTS `TechSupportTicket` (
  `TicketID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Ticket_UserID` INT(9) UNSIGNED NOT NULL,
  `Issue` VARCHAR(1000) NULL,
  `Status` VARCHAR(45) NULL,
  PRIMARY KEY (`TicketID`),
  INDEX `UserID_idx` (`Ticket_UserID` ASC) INVISIBLE,
  UNIQUE INDEX `TicketID_UNIQUE` (`TicketID` ASC) INVISIBLE,
  UNIQUE INDEX `User_UserID_UNIQUE` (`Ticket_UserID` ASC) INVISIBLE,
  CONSTRAINT `TechSupportTicket _UserID`
    FOREIGN KEY (`Ticket_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `Inventory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Inventory` ;

CREATE TABLE IF NOT EXISTS `Inventory` (
  `itemID` INT(9) UNSIGNED NOT NULL DEFAULT 0,
  `itemDiscription` VARCHAR(100) NULL,
  `itemRarity` INT(3) UNSIGNED NOT NULL DEFAULT 0,
  `item_gameID` INT(9) UNSIGNED NOT NULL,
  `item_UserID` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`itemID`),
  INDEX `item_GameID_idx` (`item_gameID` ASC) VISIBLE,
  INDEX `item_UserID_idx` (`item_UserID` ASC) VISIBLE,
  CONSTRAINT `item_GameID`
    FOREIGN KEY (`item_gameID`)
    REFERENCES `Game` (`GameID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `item_UserID`
    FOREIGN KEY (`item_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `CommunityPosts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CommunityPosts` ;

CREATE TABLE IF NOT EXISTS `CommunityPosts` (
  `PostID` INT(9) UNSIGNED NOT NULL DEFAULT 0,
  `post_UserID` INT(9) UNSIGNED NOT NULL DEFAULT 0,
  `post_GameID` INT(9) UNSIGNED NOT NULL DEFAULT 0,
  `Title` VARCHAR(45) NULL,
  `Description` VARCHAR(300) NULL,
  `PostDate` DATETIME NULL,
  `Status` ENUM('Open', 'Resolved', 'Closed') NULL DEFAULT 'Open',
  PRIMARY KEY (`PostID`),
  INDEX `post_UserID_idx` (`post_UserID` ASC) VISIBLE,
  INDEX `post_GameID_idx` (`post_GameID` ASC) VISIBLE,
  CONSTRAINT `post_UserID`
    FOREIGN KEY (`post_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `post_GameID`
    FOREIGN KEY (`post_GameID`)
    REFERENCES `Game` (`GameID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `CommunityContributions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CommunityContributions` ;

CREATE TABLE IF NOT EXISTS `CommunityContributions` (
  `ContributionID` INT(9) UNSIGNED NOT NULL DEFAULT 0,
  `Contribution_UserID` INT(9) UNSIGNED NOT NULL DEFAULT 0,
  `ContributionType` ENUM('Post', 'Response', 'Helpful') NULL,
  `ContributionDate` VARCHAR(45) NULL,
  `CommunityContributionscol` DATETIME NULL,
  `Contribution_GameID` INT(9) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`ContributionID`),
  INDEX `Contribution_GameID_idx` (`Contribution_GameID` ASC) VISIBLE,
  INDEX `Contribution_UserID_idx` (`Contribution_UserID` ASC) VISIBLE,
  CONSTRAINT `Contribution_UserID`
    FOREIGN KEY (`Contribution_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Contribution_GameID`
    FOREIGN KEY (`Contribution_GameID`)
    REFERENCES `Game` (`GameID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `BehaviorLog`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BehaviorLog` ;

CREATE TABLE IF NOT EXISTS `BehaviorLog` (
  `LogID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Log_UserID` INT(9) UNSIGNED NOT NULL DEFAULT 0,
  `Log_TicketID` INT(9) UNSIGNED NULL,
  `InteractionType` ENUM('Support', 'Feedback', 'Behavior') NOT NULL DEFAULT 'Behavior',
  `InteractionDate` DATETIME NULL,
  `InteractionDescription` VARCHAR(500) NULL,
  PRIMARY KEY (`LogID`),
  INDEX `Log_UserID_idx` (`Log_UserID` ASC) VISIBLE,
  INDEX `Log_TicketID_idx` (`Log_TicketID` ASC) VISIBLE,
  CONSTRAINT `Log_UserID`
    FOREIGN KEY (`Log_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Log_TicketID`
    FOREIGN KEY (`Log_TicketID`)
    REFERENCES `TechSupportTicket` (`TicketID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `UserGameLog`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `UserGameLog` ;

CREATE TABLE IF NOT EXISTS `UserGameLog` (
  `GameLogID` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `GameLog_UserID` INT(9) UNSIGNED NOT NULL,
  `GameLog_GameID` INT(9) UNSIGNED NOT NULL,
  `GameDuration` INT(10) NOT NULL,
  `MultiplayerInteraction` TINYINT(1) NOT NULL DEFAULT 0,
  `LastPlayed` DATETIME NOT NULL,
  PRIMARY KEY (`GameLogID`),
  INDEX `GameLog_UserID_idx` (`GameLog_UserID` ASC) VISIBLE,
  INDEX `GameLog_GameID_idx` (`GameLog_GameID` ASC) VISIBLE,
  CONSTRAINT `GameLog_UserID`
    FOREIGN KEY (`GameLog_UserID`)
    REFERENCES `User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `GameLog_GameID`
    FOREIGN KEY (`GameLog_GameID`)
    REFERENCES `Game` (`GameID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
